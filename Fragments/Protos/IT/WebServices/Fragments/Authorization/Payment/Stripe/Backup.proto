syntax = "proto3";

package IT.WebServices.Fragments.Authorization.Payment.Stripe;

import "Protos/IT/WebServices/Fragments/Authorization/Payment/Stripe/StripeSubscriptionRecord.proto";

// Service for Stripe backup fragment interface
service BackupInterface {
  // Export a list of all data.
  rpc BackupAllData (BackupAllDataRequest) returns (stream BackupAllDataResponse) {}

  // Restore a list of all data.
  rpc RestoreAllData (stream RestoreAllDataRequest) returns (RestoreAllDataResponse) {}
}
  
message BackupAllDataRequest {
  string ClientPublicJwk = 1;
}

message BackupAllDataResponse {
  oneof Response_oneof {
    string ServerPublicJwk = 1;
    EncryptedSubscriptionBackupDataRecord EncryptedRecord = 10;
  }
}

message EncryptedSubscriptionBackupDataRecord {
  bytes EncryptionIV = 1;
  bytes Data = 10;
}

message RestoreAllDataRequest {
  oneof Request_oneof {
    RestoreMode Mode = 1;
    StripeBackupDataRecord Record = 10;
  }

  enum RestoreMode {
    Wipe = 0;         // Wipe entire subscription database and restore subscription.  Any new subscription will be deleted.
    Overwrite = 1;    // Overwrite all records with corresponding record.  Will not delete new records not in list.
    MissingOnly = 2;  // Only restore missing subscription records.  Will not overwrite subscription records that already exist.
  }
}

message RestoreAllDataResponse {
  int32 NumSubscriptionsRestored = 1;
  int32 NumSubscriptionsSkipped = 2;
  int32 NumSubscriptionsOverwriten = 3;
  int32 NumSubscriptionsWiped = 4;
}

message StripeBackupDataRecord {
  bytes ExtraData = 1;   // Generic byte structure to save all application specific data for user
  StripeSubscriptionFullRecord SubscriptionRecord = 2; // SubscriptionRecord
}